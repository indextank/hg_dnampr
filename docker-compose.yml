version: "3.9"

x-common-variables:
  &default-common
  restart: always
  env_file: ./.env
  dns:
    - ${DNS:-8.8.8.8}
    - ${DNS:-114.114.114.114}

services:

################   nginx #######################################
  nginx:
    << : *default-common
    container_name: nginx
    build:
      context: ./
      dockerfile: ./build/nginx/Dockerfile
      args:
        - HTTP_PROXY=${PROXY_URL}
        - HTTPS_PROXY=${PROXY_URL}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - NGINX_VERSION=${NGINX_VERSION}
        - HMNM_VERSION=${HEADERS_MORE_NGINX_MODULE_VERSION}
        - http_proxy
        - https_proxy
        - no_proxy
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    privileged: true
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${NGINX_VHOST_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=${TZ}
    depends_on:
      - php83_apache
      - php82_apache
      # - php81_apache
      # - php80_apache
      - php74_apache
      # - php72_apache
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 512M
    networks:
      - default

  # 如果需要使用tengine,请先注释掉上面的nginx代码，在取消下面的注释即可。

  tengine:
    << : *default-common
    container_name: tengine
    build:
      context: ./
      dockerfile: ./build/tengine/Dockerfile
      args:
        - HTTP_PROXY=${PROXY_URL}
        - HTTPS_PROXY=${PROXY_URL}
        - ALPINE_REPOSITORIES=${ALPINE_REPOSITORIES}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - TENGINE_VERSION=${TENGINE_VERSION}
        - HMNM_VERSION=${HEADERS_MORE_NGINX_MODULE_VERSION}
        - http_proxy
        - https_proxy
        - no_proxy
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    privileged: true
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${NGINX_VHOST_DIR}:/etc/nginx/conf.d/:rw
      - ${TENGINE_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=${TZ}
    restart: always
    depends_on:
      - php83_apache
      - php82_apache
      # - php81_apache
      # - php80_apache
      - php74_apache
      # - php72_apache
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 512M
    networks:
      - default

################  php83 #############################
  php83_apache:
    << : *default-common
    container_name: php83_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP83_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        SWOOLE_EXT_VERSION: ${SWOOLE_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP81_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 2G
        reservations:
           memory: 256M
    networks:
      - default

################  php82 #############################
  php82_apache:
    << : *default-common
    container_name: php82_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP82_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        SWOOLE_EXT_VERSION: ${SWOOLE_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP81_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default

################   php81 ###################################
  php81_apache:
    << : *default-common
    container_name: php81_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP81_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        # MORE_EXTENSION_INSTALLER: php81.sh
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        SWOOLE_EXT_VERSION: ${SWOOLE_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP81_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default

################   php80 ############################
  php80_apache:
    << : *default-common
    container_name: php80_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP80_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        # MORE_EXTENSION_INSTALLER: php80.sh
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        SWOOLE_EXT_VERSION: ${SWOOLE_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP80_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default

################   php74 ##############################
  php74_apache:
    << : *default-common
    container_name: php74_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP74_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        # MORE_EXTENSION_INSTALLER: php74.sh
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        SWOOLE_EXT_VERSION: ${SWOOLE_EXT_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default

################   php72 ##############################
  php72_apache:
    << : *default-common
    container_name: php72_apache
    build:
      context: ./
      dockerfile: ./build/php/Dockerfile
      args:
        SOURCE_LIST: bullseye
        PHP_VERSION: ${PHP72_VERSION}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        PHP_EXTENSIONS: ${PHP_COMMON_EXTENSIONS}
        # MORE_EXTENSION_INSTALLER: php72.sh
        LIBWEBP_VERSION: ${LIBWEBP_VERSION}
        XDEBUG_EXT_VERSION: ${XDEBUG_EXT_VERSION}
        GRPC_EXT_VERSION: ${GRPC_EXT_VERSION}
        REDIS_EXT_VERSION: ${REDIS_EXT_VERSION}
        LIBRDKAFKA_VERSION: ${LIBRDKAFKA_VERSION}
        RDKAFKA_EXT_VERSION: ${RDKAFKA_EXT_VERSION}
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZOOKEEPER_EXT_VERSION: ${ZOOKEEPER_EXT_VERSION}
        PROTOBUF_VERSION: ${PROTOBUF_VERSION}
        PROTOBUF_EXT_VERSION: ${PROTOBUF_EXT_VERSION}
        MONGODB_EXT_VERSION: ${MONGODB_EXT_VERSION}
        IMAGICK_EXT_VERSION: ${IMAGICK_EXT_VERSION}
        IMAGICK_VERSION: ${IMAGICK_VERSION}
        MEMCACHED_VERSION: ${MEMCACHED_VERSION}
        OPENSSL_VERSION: ${OPENSSL_VERSION}
        CURL_VERSION: ${CURL_VERSION}
        LIBSODIUM_VERSION: ${LIBSODIUM_VERSION}
        LIBICONV_VERSION: ${LIBICONV_VERSION}
        FREETYPE_VERSION: ${FREETYPE_VERSION}
        YAML_EXT_VERSION: ${YAML_EXT_VERSION}
    volumes:
      - ${GLOBAL_WEB_PATH}:/var/www/html/:rw
      - ${APACHE_LOG_DIR}:/etc/apache2/logs/apache/:rw
      - ${APACHE_VHOST_DIR}:/etc/apache2/sites-enabled/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
    cap_add:
      - SYS_PTRACE
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default


################  redis ########################
  redis:
    << : *default-common
    container_name: redis
    build:
      context: ./
      dockerfile: ./build/redis/Dockerfile
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        CHANGE_SOURCE: ${CHANGE_SOURCE}
        REDIS_VERSION: ${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    environment:
      # TZ: ${TZ}
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=${TZ}
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${REDIS_LOG_DIR}:/var/log/redis/:rw
    entrypoint: ["redis-server", "/etc/redis.conf"]
    deploy:
     resources:
        limits:
           cpus: '4'
           memory: 4G
        reservations:
           memory: 1G
    networks:
      - default
    sysctls:
      - net.core.somaxconn=1024

################   mongo  ########################
  mongo:
    extends:
      file: compose_databases.yaml
      service: mongo

################  MySQL ########################
  mysql:
    extends:
      file: compose_databases.yaml
      service: mysql8-server

  db-data-mysql:
    extends:
      file: compose_databases.yaml
      service: db-data-mysql

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: 0
    internal: false